{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["// 写共用方法\r\nexport function isObject(obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n}","\r\nlet oldArrayMethods = Array.prototype; // 获取数组原型上的方法\r\n//  创建一个全新的对象 可以找到数组原型上的方法 而且修改对象是不会影响数组的原型方法\r\nexport let arrayMethods  = Object.create(oldArrayMethods);\r\nlet methods = [ // 这7个方法都可以改变原数组\r\n     \r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'sort',\r\n    'reverse',\r\n    'splice'\r\n]\r\nmethods.forEach(method=>{\r\n    arrayMethods[method] = function (...args) { // 函数劫持 AOP\r\n        // 当用户调用数组方法时 会先执行我自己改造的逻辑 在执行数组默认的逻辑\r\n        const ob = this.__ob__;\r\n        let result  = oldArrayMethods[method].apply(this,args);\r\n        let inserted;\r\n        // push unshift splice 都可以新增属性  （新增的属性可能是一个对象类型）\r\n        // 内部还对数组中引用类型也做了一次劫持  [].push({name:'zf'})\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice': // 也是新增属性  可以修改 可以删除  [].splice(arr,1,'div')\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        inserted && ob.observeArray(inserted);\r\n        return result;\r\n    }\r\n})","import { isObject } from '../utils';\r\nimport { arrayMethods } from './array';\r\n\r\nclass Observe {\r\n    constructor(data) {\r\n        // 对数组索引进行拦截 性能差而且直接更改索引的方式并不多\r\n        Object.defineProperty(data,'__ob__',{ // __ob__ 是一个响应式饿表示 对象数组都有\r\n            enumerable:false, // 不可枚举\r\n            configurable:false,\r\n            value:this\r\n        })\r\n        // data.__ob__ = this; // 相当于在数据上可以获取到__ob__这个属性 指代的是Observer的实例\r\n        if (Array.isArray(data)) {\r\n            // vue如何对数组进行处理呢？数组用的重写数组的方法 函数劫持\r\n            // 改变数据本身的方法我就可以监控到了\r\n           \r\n            data._proto_ = arrayMethods;  // 通过原型链 向上查找的方法\r\n            // [{a:1}]  =>  arr[0].a = 100\r\n            this.observeArray(data);\r\n        }\r\n        this.walk(data);  // 可以对数据一步一步的处理\r\n    }\r\n    observeArray(data){\r\n        for(let i =0 ; i< data.length;i++){\r\n            observe(data[i]);// 检测数组的对象类型\r\n        }\r\n    }\r\n    walk(data) {\r\n        // 对象的循环\r\n        Object.keys(data).forEach(key => {\r\n            defineReactive(data, key, data[key]);  //定义响应式的数据变化\r\n        })\r\n    }\r\n}\r\n// vue2 的性能问题 递归重写get和set  (proxy 解决了)\r\nfunction defineReactive(data, key, value) {\r\n    observe(value); // 如果传入的值还是一个对象的花 就做递归循环检测\r\n    Object.defineProperty(data, key, {\r\n        get() {\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            if (newValue === value) return;\r\n            observe(value);  // 监控当前设置的值，有可能设置的值也是对象  \r\n            value = newValue\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    // 对象就是使用defineProperty  来实现响应式原理\r\n\r\n    // 如果这个数据不是对象 或者是null 那就不用监控了\r\n    if (!isObject(data)) {\r\n        return;\r\n    }\r\n\r\n    if(data.__ob__ instanceof Observe){ // 防止对象被重复观测\r\n        return ;\r\n    }\r\n    // 对数据进行defineProperty\r\n    return new Observe(data);   // 可以看到当前的数据被观测过了\r\n}","import { observe } from './observer/index.js'\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    if (opts.props) {\r\n        initProps(vm);\r\n    }\r\n    if (opts.methods) {\r\n        initMethod(vm);\r\n    }\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    // computed  ...watch\r\n}\r\n\r\nfunction initProps() { }\r\nfunction initMethod() { }\r\nfunction initData(vm) {\r\n    //  数据响应式原理\r\n    let data = vm.$options.data;  // 用户传入的数据\r\n    // vm._data 就是检测后的数据了\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;   // 如果data 为function 时，call后data函数执行\r\n    // 观测数据\r\n    observe(data);\r\n}","//              字母a-zA-Z_ - . 数组小写字母 大写字母  \r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\r\n// ?:匹配不捕获   <aaa:aaa>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\n// 闭合标签 </xxxxxxx>  \r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\n// <div aa   =   \"123\"  bb=123  cc='123'\r\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n// <div >   <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\r\n// 匹配动态变量的  +? 尽可能少匹配\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nexport function parseHTML(html) {\r\n    function start(tagName, attrs) { // 开始标签 每次解析开始标签 都会执行此方法\r\n        // let element = createASTElement(tagName, attrs);\r\n        // if (!root) {\r\n        //     root = element; // 只有第一次是根\r\n        // }\r\n        // currentParent = element;\r\n        // stack.push(element);\r\n        console.log('开始标签--- ',tagName, attrs)\r\n    }\r\n    function end(tagName) { // 结束标签  确立父子关系\r\n        // let element = stack.pop();\r\n        // currentParent = stack[stack.length - 1];\r\n        // if (currentParent) {\r\n        //     element.parent = currentParent;\r\n        //     currentParent.children.push(element);\r\n        // }\r\n        console.log('end--- ',tagName)\r\n    }\r\n    function chars(text) { // 文本\r\n        console.log('文本--- ',text)\r\n        // text = text.replace(/\\s/g, '');\r\n        // if (text) {\r\n        //     currentParent.children.push({\r\n        //         type: 3,\r\n        //         text\r\n        //     })\r\n        // }\r\n    }\r\n    // 根据 html 解析成树结构  <div class=\"a\" style='color:red'><span>123</span> hello {{age}} {{msg}} </div>\r\n    while(html){\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd == 0) {\r\n            const startTageMatch = parseStartTag();\r\n            // console.log(startTageMatch)\r\n            if (startTageMatch) {\r\n                // 开始标签\r\n                start(startTageMatch.tagName, startTageMatch.attrs)\r\n            }\r\n            const endTagMatch = html.match(endTag);\r\n\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n            }\r\n            // 结束标签 \r\n        }\r\n        // 如果不是0 说明是文本\r\n        let text;\r\n        if (textEnd > 0) {\r\n            text = html.substring(0, textEnd); // 是文本就把文本内容进行截取\r\n            chars(text);\r\n        }\r\n        if (text) {\r\n            advance(text.length); // 删除文本内容\r\n        }\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen); // 匹配开始标签\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 匹配到的标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            let end, attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n            };\r\n            if (end) {\r\n                advance(end[0].length);\r\n                return match;\r\n            }\r\n        }\r\n    }\r\n\r\n}","import {parseHTML} from './parser.js'\r\nexport function compileToFunctions (template) {\r\n\r\n    // 实现模板的编译\r\n\r\n    let ast = parseHTML(template);\r\n\r\n\r\n    // 模板编译原理\r\n\r\n    // 1、先把我们的代码转换成ast语法数 （1）  parser 解析  (正则)\r\n    \r\n    // 2、标记静态树 （2） 树得遍历标记 markup  只是优化\r\n\r\n    // 3、通过ast产生的语法数 生成 代码 =》 render函数  code generate\r\n}","import { initState } from './state'\r\nimport {compileToFunctions} from './compiler/index.js';\r\n\r\nexport function initMixin(Vue) {\r\n\tVue.prototype._init = function (options) {\r\n\t\t// vUE 的内部有个属性 $options  就是用户传递的所有参数\r\n\t\t//在data外面定义的属性和方法通过$options可以获取和调用\r\n\t\tconst vm = this;\r\n\t\tvm.$options = options;  // 用户传入的参数\r\n\r\n\t\tinitState(vm);   // 初始化状态\r\n\r\n\t\t// 需要通过模板进行渲染\r\n\t\tif(vm.$options.el) { // 用户传入了el属性\r\n\t\t\tvm.$mount(vm.$options.el)\r\n\t\t}\r\n\t}\r\n\tVue.prototype.$mount =function(el) {  // 可能是字符串 也可以传入一个dom对象\r\n\t\tconst vm = this;\r\n\t\tel = document.querySelector(el); // 获取el属性\r\n\t\t\r\n\t\t// 如果同时传入 template 和render 默认会采用render 抛弃template， 如果都没传就使用id=\"app\" 中的模板\r\n\t\tconst opts =vm.$options;\r\n\r\n\t\tif(!opts.render) {\r\n\t\t\tlet template =opts.template;\r\n\r\n\t\t\tif(!template && el) { // 应该使用外部的模板\r\n\t\t\t\t// 1.innerHTML 设置或获取位于对象起始和结束标签内的HTML\r\n\t\t\t\t// 2.outerHTML设置或获取对象及其内容的HTML形式\r\n\t\t\t\ttemplate = el.outerHTML;\r\n\t\t\t}\r\n\t\t\tconst render= compileToFunctions(template);\r\n\t\t\topts.render = render;\r\n\t\t}\r\n\r\n\t\t// 走到这里说明不需要编译了，因为用户传入的就是 一个render函数\r\n\t}\r\n}","import {initMixin} from './init';\r\nfunction Vue(options) {\r\n\t// 内部要进行初始化的操作\r\n\tthis._init(options);  // 初始化操作 此方法后面还会被用，所以写道原型上\r\n}\r\n\r\ninitMixin(Vue);  // 添加原型方法\r\n\r\n\r\nexport default Vue;"],"names":["isObject","obj","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","ob","__ob__","args","result","apply","inserted","slice","observeArray","Observe","data","defineProperty","enumerable","configurable","value","isArray","_proto_","walk","i","length","observe","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","start","tagName","attrs","console","log","end","chars","text","textEnd","indexOf","startTageMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","push","name","compileToFunctions","template","ast","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}